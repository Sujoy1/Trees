
#include <iostream>
#include <algorithm>
using namespace std; 
int sum(int* FenwickTree, int index) 
{ 
	int sum = 0;  
//	index = index + 1; 
	while (index>0) 
	{ 
		sum += FenwickTree[index]; 
		index -= index & (-index); 
	} 
	return sum; 
} 
int query(int* FenwickTree , int l , int r)
{
  return sum( FenwickTree,r)-sum(FenwickTree,l-1);
}
void update(int* FenwickTree, int n, int index, int val) 
{ 
//	index = index + 1; 
	while (index <= n) 
	{ 
	FenwickTree[index] += val; 
	index += index & (-index); 
	} 
} 

int *constructFenwickTree(int* arr, int n) 
{ 
	int *FenwickTree = new int[n+1]; 
	for (int i=1; i<=n; i++) 
		FenwickTree[i] = 0; 
	for (int i=0; i<n; i++) 
		update(FenwickTree, n, i, arr[i]); 
	return FenwickTree; 
}
int Inversion_Count(int* arr,int n)
{
	int i;

    int maxElement = 0;
    for (int i=1; i<=n; i++)
        if (maxElement < arr[i])
        maxElement = arr[i];
    
    int FenwickTree[maxElement+1];
    for (int i=0; i<=maxElement; i++)
        FenwickTree[i] = 0;
	int inv=0;
	for(i=n;i>=1;i--)
	{
		inv += sum(FenwickTree,arr[i]);
		update(FenwickTree,n,arr[i],1);
	}
	return inv;
}
int main() 
{ 
	int arr[] = {0,2, 1, 1, 3, 2, 3, 4, 5, 6, 7, 8, 9}; 
	int n = sizeof(arr)/sizeof(arr[0]) -1; 
	cout << "Number of inversions are : " << Inversion_Count(arr,n);
	return 0; 
} 
